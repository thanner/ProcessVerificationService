@prefix owl: <http://www.w3.org/2002/07/owl#> .

[]
  a owl:Ontology ;
  owl:Prefix "" ;
  owl:Import "http://www.scch.at/ontologies/bpmn20base.owl" ;
  owl:Annotation [ a owl:AnnotationProperty ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:Literal ] ;
  owl:Declaration [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:DataProperty ] ;
  owl:EquivalentClasses [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """• If there is no EventDefinition defined, then this is
considered a catch None Event and the Event will not have
an internal marker (see Figure 10.91).
• If there is more than one EventDefinition defined, this is
considered a Catch Multiple Event and the Event will have
the pentagon internal marker (see Figure 10.90)."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectUnionOf [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.74 shows the variations of Cancel Events."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Note that a Cancel Event always interrupts the Activity to which it is
attached, i.e., there is not a non-interrupting version of this Event."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The Sub-Choreography can be in a collapsed view that hides its details (see Figure 11.17) or a Sub-Choreography can be expanded to show its details (a Choreography Process) within the Choreography Process in which it is contained (see Figure 11.19). In the collapsed form, the Sub-Process object uses a marker to distinguish it as a Sub- Choreography, rather than a Choreography Task."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Sub- Conversation marker MUST be a small square with a plus sign (+) inside. The square MUST be positioned at the bottom center of the shape.

A Sub-Conversation is a graphical object within a Collaboration, but it also can be “opened up” to show the lowerlevel details of the Conversation, which consist of Message Flows, Conversations, and/or other Sub-Conversations."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Sub-Process can be in a collapsed view that hides its details (see Figure 10.25) or a Sub-Process can be in an expanded view that shows its details within the view of the Process in which it is contained (see Figure 10.26). In the collapsed form, the Sub-Process object uses a marker to distinguish it as a Sub-Process, rather than a Task.
* The Sub-Process marker MUST be a small square with a plus sign (+) inside. The square MUST be positioned at the bottom center of the shape."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "If there is only one (1) EventDefinition associated with the Start Event and that EventDefinition is of the subclass CompensationEventDefinition, then the Event is a Compensation Start Event and uses a double triangle marker (see the figure to the right)."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectUnionOf [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.75 shows the variations of Compensation Events."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Note that the interrupting a non-interrupting aspect of other Events does not apply in the case of a Compensation Event. Compensations can only be triggered after completion of the Activity to which they are
attached. Thus they cannot interrupt the Activity. The boundary of the
Event is always solid."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one (1) EventDefinition associated with the Start
Event and that EventDefinition is of the subclass ConditionalEventDefinition, then the Event is a Conditional Start Event and MUST be displayed with a lined paper marker (see the figure to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectUnionOf [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.77 shows the variations of Conditional Events."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Conditional Event that interrupts the Activity to which it is
attached, the boundary of the Event is solid (see upper figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to true.
For a Conditional Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Conditional Event that interrupts the Activity to which it is
attached, the boundary of the Event is solid (see upper figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to true.
For a Conditional Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one (1) EventDefinition associated with the Start Event and that EventDefinition is of the subclass ErrorEventDefinition, then the
Event is an Error Start Event and uses a lightning marker (see the figures to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectUnionOf [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.79 – Error Events"
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Note that an Error Event always interrupts the Activity to which it is
attached, i.e., there is not a non-interrupting version of this Event. The
boundary of the Event thus always solid (see figure on the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one (1) EventDefinition associated with the Start Event and that EventDefinition is of the subclass EscalationEventDefinition,
then the Event is an Escalation Start Event and uses an arrowhead marker (see the figures to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectUnionOf [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.81 shows the variations of Escalation Events."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For an Escalation Event that interrupts the Activity to which it is
attached, the boundary of the Event is solid (see upper figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to true.
For an Escalation Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For an Escalation Event that interrupts the Activity to which it is
attached, the boundary of the Event is solid (see upper figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to true.
For an Escalation Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "An Event Sub-Process is a specialized Sub-Process that is used within a Process (or Sub-Process). A Sub-Process is defined as an Event Sub-Process when its triggeredByEvent attribute is set to true."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "If the Event Gateway’s instantiate attribute is set to true, then the marker for the Event Gateway looks like a Multiple Start Event (see Figure 10.118). Figure 10.118 – Exclusive Event-Based Gateway to start a Process"
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The Sub-Choreography can be in a collapsed view that hides its details (see Figure 11.17) or a Sub-Choreography can be expanded to show its details (a Choreography Process) within the Choreography Process in which it is contained (see Figure 11.19). In the collapsed form, the Sub-Process object uses a marker to distinguish it as a Sub- Choreography, rather than a Choreography Task."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Sub- Conversation marker MUST be a small square with a plus sign (+) inside. The square MUST be positioned at the bottom center of the shape.

A Sub-Conversation is a graphical object within a Collaboration, but it also can be “opened up” to show the lowerlevel details of the Conversation, which consist of Message Flows, Conversations, and/or other Sub-Conversations."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Sub-Process can be in a collapsed view that hides its details (see Figure 10.25) or a Sub-Process can be in an expanded view that shows its details within the view of the Process in which it is contained (see Figure 10.26). In the collapsed form, the Sub-Process object uses a marker to distinguish it as a Sub-Process, rather than a Task.
* The Sub-Process marker MUST be a small square with a plus sign (+) inside. The square MUST be positioned at the bottom center of the shape."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Gateway with a gatewayDirection of converging MUST have multiple incoming Sequence Flows, but MUST NOT have multiple outgoing Sequence Flows. "
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Gateway with a gatewayDirection of diverging MUST have multiple outgoing Sequence Flows, but MUST NOT have multiple incoming Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Gateway with a gatewayDirection of mixed MUST have both multiple incoming and outgoing Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Gateway with a gatewayDirection of unspecified MAY have both multiple incoming and outgoing Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """• If there is no EventDefinition defined, then this is
considered a catch None Event and the Event will not have
an internal marker (see Figure 10.91).
• If there is more than one EventDefinition defined, this is
considered a Catch Multiple Event and the Event will have
the pentagon internal marker (see Figure 10.90)."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectUnionOf [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.83 shows the variations of Link Events."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:Class ""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one (1) EventDefinition associated with the Start
Event and that EventDefinition is of the subclass MessageEvent-
Definition, then the Event is a Message Start Event and MUST be
displayed with an envelope marker (see the figure to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectUnionOf [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.88 shows the variations of Message Events."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Message Event that interrupts the Activity to which it is attached,
the boundary of the Event is solid (see upper figure on the right). Note
that if using this notation, the attribute cancelActivity of the Activity
to which the Event is attached is implicitly set to true.
For a Message Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Message Event that interrupts the Activity to which it is attached,
the boundary of the Event is solid (see upper figure on the right). Note
that if using this notation, the attribute cancelActivity of the Activity
to which the Event is attached is implicitly set to true.
For a Message Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.90 shows the variations of Multiple Events."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Multiple Event that interrupts the Activity to which it is attached,
the boundary of the Event is solid (see upper figure on the right). Note
that if using this notation, the attribute cancelActivity of the Activity
to which the Event is attached is implicitly set to true.
For a Multiple Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Multiple Event that interrupts the Activity to which it is attached,
the boundary of the Event is solid (see upper figure on the right). Note
that if using this notation, the attribute cancelActivity of the Activity
to which the Event is attached is implicitly set to true.
For a Multiple Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The None Start Event does not have a defined trigger.

Figure 10.91 shows the variations of None Events."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "If the Start Event has no associated EventDefinition, then the Event MUST be displayed without a marker."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If the Event Gateway’s instantiate attribute is set to true and the eventGatewayType attribute is set to Parallel, then the marker for the Event Gateway looks like a Parallel Multiple Start Event (see Figure 10.119). The Event Gateway’s instantiate attribute MUST be set to true in order for the eventGatewayType attribute to be set to Parallel (i.e., for Event Gateway’s that do not instantiate the Process MUST be Exclusive—a standard Parallel Gateway can be used to include parallel Events in the middle of a Process).

The attribute can only be set to parallel when the instantiate
attribute is set to true."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.92 shows the variations of Parallel Multiple Events."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Parallel Multiple Event that interrupts the Activity to which it is
attached, the boundary of the Event is solid (see the upper figure to the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to true.
For a Parallel Multiple Event that does not interrupt the Activity to which
it is attached, the boundary of the Event is dashed (see the lower figure to
the right). Note that if using this notation, the attribute cancelActivity
of the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Parallel Multiple Event that interrupts the Activity to which it is
attached, the boundary of the Event is solid (see the upper figure to the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to true.
For a Parallel Multiple Event that does not interrupt the Activity to which
it is attached, the boundary of the Event is dashed (see the lower figure to
the right). Note that if using this notation, the attribute cancelActivity
of the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """There are three basic types of BPMN Processes:
• Private Non-executable (internal) Business Processes
• Private Executable (internal) Business Processes
• Public Processes

Private (Internal) Business Processes
Private Business Processes are those internal to a specific organization."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """There are three basic types of BPMN Processes:
• Private Non-executable (internal) Business Processes
• Private Executable (internal) Business Processes
• Public Processes

Private (Internal) Business Processes
Private Business Processes are those internal to a specific organization.

Remark: The semantics of no value is not explicitly specified for private processes. However, the following is specified for public processes: For public Processes, no value has the same semantics as if the value
were false. ...
Therefore, the author assumes the same behavior for private processes."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectUnionOf [
      a owl:DataHasValue ;
      owl:DataProperty "" ;
      owl:Literal "false"
    ], [
      a owl:DataExactCardinality ;
      owl:DataProperty "" ;
      owl:Datatype ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """There are three basic types of BPMN Processes:
• Private Non-executable (internal) Business Processes
• Private Executable (internal) Business Processes
• Public Processes

Private (Internal) Business Processes
Private Business Processes are those internal to a specific organization."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """There are three basic types of BPMN Processes:
• Private Non-executable (internal) Business Processes
• Private Executable (internal) Business Processes
• Public Processes"""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Conditional flow: A Sequence Flow can have a condition Expression that are evaluated at runtime to determine whether or not the Sequence Flow will be used (i.e., will a token travel down the
Sequence Flow – see page 97). If the conditional flow is outgoing from an Activity, then the Sequence Flow will have a mini-diamond
at the beginning of the connector (see figure to the right). If the conditional flow is outgoing from a Gateway, then the line will not have a mini-diamond (see figure in the row above)."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one (1) EventDefinition associated with the Start
Event and that EventDefinition is of the subclass SignalEvent-
Definition, then the Event is a Signal Start Event and MUST be displayed
with a triangle marker (see the figure to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectUnionOf [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.94 shows the variations of Signal Events."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Signal Event that interrupts the Activity to which it is attached, the
boundary of the Event is solid (see upper figure on the right). Note that if using this notation, the attribute cancelActivity of the Activity to
which the Event is attached is implicitly set to true.
For a Signal Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Signal Event that interrupts the Activity to which it is attached, the
boundary of the Event is solid (see upper figure on the right). Note that if using this notation, the attribute cancelActivity of the Activity to
which the Event is attached is implicitly set to true.
For a Signal Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectSomeValuesFrom [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectComplementOf [
      a owl:ObjectSomeValuesFrom ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """• If there is no EventDefinition defined, then this is
considered a catch None Event and the Event will not have
an internal marker (see Figure 10.91).
• If there is more than one EventDefinition defined, this is
considered a Catch Multiple Event and the Event will have
the pentagon internal marker (see Figure 10.90)."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectUnionOf [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.95 shows the Terminate Event."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one (1) EventDefinition associated with the Start
Event and that EventDefinition is of the subclass TimerEventDefinition,
then the Event is a Timer Start Event and MUST be displayed
with a clock marker (see the figure to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectUnionOf [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectIntersectionOf ;
      owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.96 shows the variations of Timer Events."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Timer Event that interrupts the Activity to which it is attached, the
boundary of the Event is solid (see upper figure on the right). Note that if using this notation, the attribute cancelActivity of the Activity to
which the Event is attached is implicitly set to true.
For a Timer Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Timer Event that interrupts the Activity to which it is attached, the
boundary of the Event is solid (see upper figure on the right). Note that if using this notation, the attribute cancelActivity of the Activity to
which the Event is attached is implicitly set to true.
For a Timer Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Sub-Process is marked as being ad-hoc with a “tilde” symbol placed at the bottom center of the Sub-Process shape (see Figure 10.35 and Figure 10.36)."
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:Class "" ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ] ;
  owl:SubClassOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """• If there is no EventDefinition defined, then this is
considered a catch None Event and the Event will not have
an internal marker (see Figure 10.91).
• If there is more than one EventDefinition defined, this is
considered a Catch Multiple Event and the Event will have
the pentagon internal marker (see Figure 10.90)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The types of Event Definitions are: CancelEventDefinition, ..."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.74 shows the variations of Cancel Events."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 7.4 – Message Flow Connection Rules"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Result attribute of the End Event MUST be set to Message or Multiple if there are any outgoing Message Flows.
The Result attribute of the End Event MUST be set to Multiple if there is more than one outgoing Message Flows."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Table 10.93 – Types of Events and their Markers

Cancel Events are only used in the context of modeling Transaction Sub-Processes (see page 178 for more details on Transactions). There are two variations: a catch Intermediate Event and an End Event.
* The catch Cancel Intermediate Event MUST only be attached to the boundary of a Transaction Sub-Process and, thus, MAY NOT be used in normal flow.
* The Cancel End Event MUST only be used within a Transaction Sub-Process and, thus, MAY NOT be used in any other type of Sub-Process or Process."""
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Note that a Cancel Event always interrupts the Activity to which it is
attached, i.e., there is not a non-interrupting version of this Event."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "In the collapsed form, the Sub-Process object uses a marker to distinguish it as a Sub-Choreography, rather than a Choreography Task."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Sub- Conversation marker MUST be a small square with a plus sign (+) inside. The square MUST be positioned at the bottom center of the shape.

A Sub-Conversation is a graphical object within a Collaboration, but it also can be “opened up” to show the lowerlevel details of the Conversation, which consist of Message Flows, Conversations, and/or other Sub-Conversations."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Sub-Process can be in a collapsed view that hides its details (see Figure 10.25) or a Sub-Process can be in an expanded view that shows its details within the view of the Process in which it is contained (see Figure 10.26). In the collapsed form, the Sub-Process object uses a marker to distinguish it as a Sub-Process, rather than a Task.
* The Sub-Process marker MUST be a small square with a plus sign (+) inside. The square MUST be positioned at the bottom center of the shape."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "If there is only one EventDefinition associated with the Start Event and that EventDefinition is of the subclass CompensationEventDefinition, then the Event is a Compensation Start Event and uses a double triangle marker (see the figure to the right)."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "If there is only one EventDefinition associated with the Start Event and that EventDefinition is of the subclass CompensationEventDefinition, then the Event is a Compensation Start Event and uses a double triangle marker (see the figure to the right)."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.75 shows the variations of Compensation Events."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 7.4 – Message Flow Connection Rules"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Result attribute of the End Event MUST be set to Message or Multiple if there are any outgoing Message Flows.
The Result attribute of the End Event MUST be set to Multiple if there is more than one outgoing Message Flows."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Table 10.93 – Types of Events and their Markers

Compensation Events are used in the context of triggering or handling compensation (see page 302 for more details on
compensation). There are four variations: a Start Event, both a catch and throw Intermediate Event, and an End
Event.
* The Compensation Start Event MAY NOT be used for a top-level Process.
* The Compensation Start Event MAY be used for an Event Sub-Process.
* The catch Compensation Intermediate Event MUST only be attached to the boundary of an Activity and, thus, MAY NOT be used in normal flow.
* The throw Compensation Intermediate Event MAY be used in normal flow.
* The Compensation End Event MAY be used within any Sub-Process or Process.
"""
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Note that the interrupting a non-interrupting aspect of other Events does not apply in the case of a Compensation Event. Compensations can only be triggered after completion of the Activity to which they are
attached. Thus they cannot interrupt the Activity. The boundary of the
Event is always solid."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one EventDefinition associated with the Start
Event and that EventDefinition is of the subclass ConditionalEventDefinition, then the Event is a Conditional Start Event and MUST be displayed with a lined paper marker (see the figure to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one EventDefinition associated with the Start
Event and that EventDefinition is of the subclass ConditionalEventDefinition, then the Event is a Conditional Start Event and MUST be displayed with a lined paper marker (see the figure to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.77 shows the variations of Conditional Events."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 7.4 – Message Flow Connection Rules"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Result attribute of the End Event MUST be set to Message or Multiple if there are any outgoing Message Flows.
The Result attribute of the End Event MUST be set to Multiple if there is more than one outgoing Message Flows."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Conditional Event that interrupts the Activity to which it is
attached, the boundary of the Event is solid (see upper figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to true.
For a Conditional Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Conditional Event that interrupts the Activity to which it is
attached, the boundary of the Event is solid (see upper figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to true.
For a Conditional Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "false"
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The Cancel Intermediate Event can only be used when attached to the boundary of a Transaction Sub-Process. It cannot be used in any normal flow and cannot be attached to a non-Transaction Sub-Process."
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Cancel: This type of End is used within a Transaction Sub-Process."
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "There is only one type of Start Event for Sub-Processes in BPMN (see Figure 10.82): None."
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Start Event attributes isInterrupting:
This attribute only applies to Start Events of Event Sub-Processes; it is ignored for other Start Events."""
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:DataHasValue ;
      owl:DataProperty "" ;
      owl:Literal "true"
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """A flag that identifies whether this Sub-Process is an Event Sub-Process.
• If false, then this Sub-Process is a normal Sub-Process.
• If true, then this Sub-Process is an Event Sub-Process and is
subject to additional constraints (see page 176)."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "false"
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one EventDefinition associated with the Start Event and that EventDefinition is of the subclass ErrorEventDefinition, then the
Event is an Error Start Event and uses a lightning marker (see the figures to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one EventDefinition associated with the Start Event and that EventDefinition is of the subclass ErrorEventDefinition, then the
Event is an Error Start Event and uses a lightning marker (see the figures to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.79 – Error Events"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 7.4 – Message Flow Connection Rules"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Result attribute of the End Event MUST be set to Message or Multiple if there are any outgoing Message Flows.
The Result attribute of the End Event MUST be set to Multiple if there is more than one outgoing Message Flows."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Note that an Error Event always interrupts the Activity to which it is
attached, i.e., there is not a non-interrupting version of this Event. The
boundary of the Event thus always solid (see figure on the right)."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one EventDefinition associated with the Start Event and that EventDefinition is of the subclass EscalationEventDefinition,
then the Event is an Escalation Start Event and uses an arrowhead marker (see the figures to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one EventDefinition associated with the Start Event and that EventDefinition is of the subclass EscalationEventDefinition,
then the Event is an Escalation Start Event and uses an arrowhead marker (see the figures to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.81 shows the variations of Escalation Events."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 7.4 – Message Flow Connection Rules"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Result attribute of the End Event MUST be set to Message or Multiple if there are any outgoing Message Flows.
The Result attribute of the End Event MUST be set to Multiple if there is more than one outgoing Message Flows."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For an Escalation Event that interrupts the Activity to which it is
attached, the boundary of the Event is solid (see upper figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to true.
For an Escalation Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For an Escalation Event that interrupts the Activity to which it is
attached, the boundary of the Event is solid (see upper figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to true.
For an Escalation Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "false"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Start Event of an Event Sub-Process MUST have a defined trigger.
The Start Event trigger (EventDefinition) MUST be from the following types: Message, Error, Escalation, Compensation, Conditional, Signal, and Multiple (see page 26 for more details).

However, Table 10.93 mentiones two further possible StartEvents: Timer and Parallel Multiple."""
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "There are two possible consequences to the parent Process when an Event Sub-Process is triggered: 1) the parent Process can be interrupted, and 2) the parent Process can continue its work (not interrupted). This is determined by the type of Start Event that is used."
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:DataExactCardinality ;
      owl:DataProperty "" ;
      owl:Datatype ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Event Sub-Processes are self-contained and MUST not be connected to the rest of the Sequence Flows in the Sub-Processes; also they
cannot have attached boundary Events."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "An Event Sub-Process MUST have one and only one Start Event."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Event Sub-Processes are self-contained and MUST not be connected to the rest of the Sequence Flows in the Sub-Processes; also they
cannot have attached boundary Events."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "An Event Sub-Process MUST NOT have any incoming or outgoing Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "An Event Sub-Process MUST NOT have any incoming or outgoing Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Sub-Process is defined as an Event Sub-Process when its triggeredByEvent attribute is set to true."
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If the Event Gateway’s instantiate attribute is set to true, then the marker for the Event Gateway looks like a Multiple Start Event (see Figure 10.118). Figure 10.118 – Exclusive Event-Based Gateway to start a Process

...for Event Gateway’s that do not instantiate the Process MUST be
Exclusive"""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "In the collapsed form, the Sub-Process object uses a marker to distinguish it as a Sub-Choreography, rather than a Choreography Task."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Sub- Conversation marker MUST be a small square with a plus sign (+) inside. The square MUST be positioned at the bottom center of the shape.

A Sub-Conversation is a graphical object within a Collaboration, but it also can be “opened up” to show the lowerlevel details of the Conversation, which consist of Message Flows, Conversations, and/or other Sub-Conversations."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Sub-Process can be in a collapsed view that hides its details (see Figure 10.25) or a Sub-Process can be in an expanded view that shows its details within the view of the Process in which it is contained (see Figure 10.26). In the collapsed form, the Sub-Process object uses a marker to distinguish it as a Sub-Process, rather than a Task.
* The Sub-Process marker MUST be a small square with a plus sign (+) inside. The square MUST be positioned at the bottom center of the shape."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Gateway with a gatewayDirection of converging MUST have multiple incoming Sequence Flows, but MUST NOT have multiple outgoing Sequence Flows. "
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Gateway with a gatewayDirection of converging MUST have multiple incoming Sequence Flows, but MUST NOT have multiple outgoing Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Gateway with a gatewayDirection of converging MUST have multiple incoming Sequence Flows, but MUST NOT have multiple outgoing Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Gateway with a gatewayDirection of diverging MUST have multiple outgoing Sequence Flows, but MUST NOT have multiple incoming Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Gateway with a gatewayDirection of diverging MUST have multiple outgoing Sequence Flows, but MUST NOT have multiple incoming Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Gateway with a gatewayDirection of diverging MUST have multiple outgoing Sequence Flows, but MUST NOT have multiple incoming Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Gateway with a gatewayDirection of mixed MUST have both multiple incoming and outgoing Sequence Flows. "
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Gateway with a gatewayDirection of mixed MUST have both multiple incoming and outgoing Sequence Flows. "
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Gateway with a gatewayDirection of mixed MUST have both multiple incoming and outgoing Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Gateway with a gatewayDirection of unspecified MAY have both multiple incoming and outgoing Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """• If there is no EventDefinition defined, then this is
considered a catch None Event and the Event will not have
an internal marker (see Figure 10.91).
• If there is more than one EventDefinition defined, this is
considered a Catch Multiple Event and the Event will have
the pentagon internal marker (see Figure 10.90)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The types of Event Definitions are:
CancelEventDefinition, CompensationEventDefinition, ConditionalEventDefinition, ErrorEventDefinition, EscalationEventDefinition, MessageEventDefinition, LinkEventDefinition, ..."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.83 shows the variations of Link Events."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 7.4 – Message Flow Connection Rules"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Result attribute of the End Event MUST be set to Message or Multiple if there are any outgoing Message Flows.
The Result attribute of the End Event MUST be set to Multiple if there is more than one outgoing Message Flows."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Link Intermediate Event MUST NOT be both a target and a source of a Sequence Flow. A Link Intermediate Event MAY be the target (target Link) or a source (source Link) of a Sequence Flow, but MUST NOT be both a target and a source."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one EventDefinition associated with the Start
Event and that EventDefinition is of the subclass MessageEvent-
Definition, then the Event is a Message Start Event and MUST be
displayed with an envelope marker (see the figure to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Message Intermediate Event MAY have an incoming Message Flow or an outgoing Message Flow, but not both."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one EventDefinition associated with the Start
Event and that EventDefinition is of the subclass MessageEvent-
Definition, then the Event is a Message Start Event and MUST be
displayed with an envelope marker (see the figure to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """A Start Event MAY be the target for a Message Flow; it can have zero (0) or more incoming Message Flows.
A Message Intermediate Event MAY be the target for a Message Flow; it can have one incoming Message Flow."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.88 shows the variations of Message Events."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Result attribute of the End Event MUST be set to Message or Multiple if there are any outgoing Message Flows.
The Result attribute of the End Event MUST be set to Multiple if there is more than one outgoing Message Flows."""
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Message Event that interrupts the Activity to which it is attached,
the boundary of the Event is solid (see upper figure on the right). Note
that if using this notation, the attribute cancelActivity of the Activity
to which the Event is attached is implicitly set to true.
For a Message Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Message Event that interrupts the Activity to which it is attached,
the boundary of the Event is solid (see upper figure on the right). Note
that if using this notation, the attribute cancelActivity of the Activity
to which the Event is attached is implicitly set to true.
For a Message Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "false"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If the Start Event has more than one associated EventDefiniton, then the Event MUST be displayed with the Multiple Event marker (a pentagon—see the upper figure to the right).
If the Intermediate Event has more than one associated EventDefiniton, then the Event will be displayed with the Multiple Event marker.
Annotation: It could also be a parallel multiple event, depending on the attribute parallelMultiple, which is only specified for CatchEvents."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectMinCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectMinCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ] ;
    owl:ObjectMinCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Regarding this restriction the specification is ambigious. According to Table 7.4 – Message Flow Connection Rules only Evetns with Message Trigger have Message Flows. However for EndEvents the following is mentioned: The Result attribute of the End Event MUST be set to Message or Multiple if there are any outgoing Message Flows.
The Result attribute of the End Event MUST be set to Multiple if there is more than one outgoing Message Flows.
Therefore, the author assumes that the same is also applicable for Start- and Catch-Events and, therefore, for incoming Message Flows."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Result attribute of the End Event MUST be set to Message or Multiple if there are any outgoing Message Flows.
The Result attribute of the End Event MUST be set to Multiple if there is more than one outgoing Message Flows."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Multiple Event is determined by an Event that specifies more than one Event Definition."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.90 shows the variations of Multiple Events."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Multiple Event that interrupts the Activity to which it is attached,
the boundary of the Event is solid (see upper figure on the right). Note
that if using this notation, the attribute cancelActivity of the Activity
to which the Event is attached is implicitly set to true.
For a Multiple Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Multiple Event that interrupts the Activity to which it is attached,
the boundary of the Event is solid (see upper figure on the right). Note
that if using this notation, the attribute cancelActivity of the Activity
to which the Event is attached is implicitly set to true.
For a Multiple Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "false"
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.91 shows the variations of None Events."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 7.4 – Message Flow Connection Rules"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Result attribute of the End Event MUST be set to Message or Multiple if there are any outgoing Message Flows.
The Result attribute of the End Event MUST be set to Multiple if there is more than one outgoing Message Flows."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """There is no specific EventDefinition subclass (see page 268) for None Start Events.

If the End Event has no associated EventDefiniton, then the Event will be displayed without a marker (see the figure on the right).

If the (throw) Intermediate Event has no associated EventDefiniton, then the Event MUST be displayed without a marker (see the figure on the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """A None Event is determined by an Event that does not specify an
Event Definition.

If the End Event has no associated EventDefiniton, then the Event will be displayed without a marker (see the figure on the right).

If the (throw) Intermediate Event has no associated EventDefiniton, then the Event MUST be displayed without a marker (see the figure on the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Event Gateway’s instantiate attribute MUST be set to true in order for the eventGatewayType attribute to be set to Parallel.

The attribute can only be set to parallel when the instantiate
attribute is set to true."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Event Gateway’s instantiate attribute MUST be set to true in order for the eventGatewayType attribute to be set to Parallel.

The attribute can only be set to parallel when the instantiate
attribute is set to true."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If the Start Event has more than one associated EventDefiniton and the parallelMultiple attribute of the Start Event is true, then the Event MUST be displayed with the Parallel Multiple Event marker (an open plus sign—see the figure to the right).
If the Intermediate Event has more than one associated EventDefiniton and the parallelMultiple attribute of the Intermediate Event is true, then the Event will be displayed with the Parallel Multiple Event marker.
Annotation: It could also be a multiple event, depending on the attribute parallelMultiple, which is only specified for CatchEvents."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectMinCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectMinCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ] ;
    owl:ObjectMinCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.92 shows the variations of Parallel Multiple Events."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 7.4 – Message Flow Connection Rules"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Result attribute of the End Event MUST be set to Message or Multiple if there are any outgoing Message Flows.
The Result attribute of the End Event MUST be set to Multiple if there is more than one outgoing Message Flows."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Parallel Multiple Event that interrupts the Activity to which it is
attached, the boundary of the Event is solid (see the upper figure to the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to true.
For a Parallel Multiple Event that does not interrupt the Activity to which
it is attached, the boundary of the Event is dashed (see the lower figure to
the right). Note that if using this notation, the attribute cancelActivity
of the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Parallel Multiple Event that interrupts the Activity to which it is
attached, the boundary of the Event is solid (see the upper figure to the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to true.
For a Parallel Multiple Event that does not interrupt the Activity to which
it is attached, the boundary of the Event is dashed (see the lower figure to
the right). Note that if using this notation, the attribute cancelActivity
of the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "false"
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """There are three basic types of BPMN Processes:
• Private Non-executable (internal) Business Processes
• Private Executable (internal) Business Processes
• Public Processes

Private (Internal) Business Processes
Private Business Processes are those internal to a specific organization."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """There are three basic types of BPMN Processes:
• Private Non-executable (internal) Business Processes
• Private Executable (internal) Business Processes
• Public Processes

Private (Internal) Business Processes
Private Business Processes are those internal to a specific organization.

Remark: The semantics of no value is not explicitly specified for private processes. However, the following is specified for public processes: For public Processes, no value has the same semantics as if the value
were false. ...
Therefore, the author assumes the same behavior for private processes."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ] ;
    owl:DataExactCardinality [ a owl:DataProperty ], [ a owl:Datatype ]
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """There are three basic types of BPMN Processes:
• Private Non-executable (internal) Business Processes
• Private Executable (internal) Business Processes
• Public Processes

Private (Internal) Business Processes
Private Business Processes are those internal to a specific organization."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For public Processes, no value has the same semantics as if the value
were false. The value MAY not be true for public Processes."""
  ], [ a owl:Class ], [
    a owl:ObjectComplementOf ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """There are three basic types of BPMN Processes:
• Private Non-executable (internal) Business Processes
• Private Executable (internal) Business Processes
• Public Processes"""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "If a conditional Sequence Flow is used from a source Activity, then there MUST be at least one other outgoing Sequence Flow from that Activity."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectComplementOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
    ] ;
    owl:ObjectSomeValuesFrom [ a owl:ObjectProperty ], [
      a owl:ObjectMinCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Conditional flow: A Sequence Flow can have a condition Expression that are evaluated at runtime to determine whether or not the Sequence Flow will be used (i.e., will a token travel down the
Sequence Flow – see page 97). If the conditional flow is outgoing from an Activity, then the Sequence Flow will have a mini-diamond
at the beginning of the connector (see figure to the right). If the conditional flow is outgoing from a Gateway, then the line will not have a mini-diamond (see figure in the row above)."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Conditional outgoing Sequence Flows from a Gateway MUST NOT be drawn with a mini-diamond marker at the beginning of the connector. A source Gateway MUST NOT be of type Parallel or Event."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For Data-Based Exclusive Gateways or Inclusive Gateways, one type of flow is the Default condition flow (see page 97). 
A Sequence Flow that has an Exclusive, Inclusive, or Complex Gateway or an Activity as its source can also be defined with as default.
Default Sequence Flows: For Exclusive Gateways, Inclusive Gateways, and Choreography Activities that have Conditional Sequence Flows, one of the outgoing Sequence Flows MAY be a Default Sequence Flow. """
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The default Sequence Flow should not have a conditionExpression. Any such Expression SHALL be ignored."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one EventDefinition associated with the Start
Event and that EventDefinition is of the subclass SignalEvent-
Definition, then the Event is a Signal Start Event and MUST be displayed
with a triangle marker (see the figure to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one EventDefinition associated with the Start
Event and that EventDefinition is of the subclass SignalEvent-
Definition, then the Event is a Signal Start Event and MUST be displayed
with a triangle marker (see the figure to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.94 shows the variations of Signal Events."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 7.4 – Message Flow Connection Rules"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Result attribute of the End Event MUST be set to Message or Multiple if there are any outgoing Message Flows.
The Result attribute of the End Event MUST be set to Multiple if there is more than one outgoing Message Flows."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Signal Event that interrupts the Activity to which it is attached, the
boundary of the Event is solid (see upper figure on the right). Note that if using this notation, the attribute cancelActivity of the Activity to
which the Event is attached is implicitly set to true.
For a Signal Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Signal Event that interrupts the Activity to which it is attached, the
boundary of the Event is solid (see upper figure on the right). Note that if using this notation, the attribute cancelActivity of the Activity to
which the Event is attached is implicitly set to true.
For a Signal Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "false"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectSomeValuesFrom ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Start Event of an Event Sub-Process MUST have a defined trigger.
The Start Event trigger (EventDefinition) MUST be from the following types: Message, Error, Escalation, Compensation, Conditional, Signal, and Multiple (see page 26 for more details).

However, Table 10.93 mentiones two further possible StartEvents: Timer and Parallel Multiple."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectComplementOf ;
    owl:ObjectSomeValuesFrom [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """• If there is no EventDefinition defined, then this is
considered a catch None Event and the Event will not have
an internal marker (see Figure 10.91).
• If there is more than one EventDefinition defined, this is
considered a Catch Multiple Event and the Event will have
the pentagon internal marker (see Figure 10.90)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The types of Event Definitions are:
CancelEventDefinition, CompensationEventDefinition, ConditionalEventDefinition, ErrorEventDefinition, EscalationEventDefinition, MessageEventDefinition, LinkEventDefinition, SignalEventDefinition, TerminateEventDefinition, .."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.95 shows the Terminate Event."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 7.4 – Message Flow Connection Rules"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Result attribute of the End Event MUST be set to Message or Multiple if there are any outgoing Message Flows.
The Result attribute of the End Event MUST be set to Multiple if there is more than one outgoing Message Flows."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one EventDefinition associated with the Start
Event and that EventDefinition is of the subclass TimerEventDefinition,
then the Event is a Timer Start Event and MUST be displayed
with a clock marker (see the figure to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is only one EventDefinition associated with the Start
Event and that EventDefinition is of the subclass TimerEventDefinition,
then the Event is a Timer Start Event and MUST be displayed
with a clock marker (see the figure to the right)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Figure 10.96 shows the variations of Timer Events."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 7.4 – Message Flow Connection Rules"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Result attribute of the End Event MUST be set to Message or Multiple if there are any outgoing Message Flows.
The Result attribute of the End Event MUST be set to Multiple if there is more than one outgoing Message Flows."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Timer Event that interrupts the Activity to which it is attached, the
boundary of the Event is solid (see upper figure on the right). Note that if using this notation, the attribute cancelActivity of the Activity to
which the Event is attached is implicitly set to true.
For a Timer Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Timer Event that interrupts the Activity to which it is attached, the
boundary of the Event is solid (see upper figure on the right). Note that if using this notation, the attribute cancelActivity of the Activity to
which the Event is attached is implicitly set to true.
For a Timer Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "false"
  ], [ a owl:Class ], [ a owl:Class ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "An Activity MAY be the target of a Message Flow; it can have zero (0) or more incoming Message Flows."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "An Activity MAY be a source of a Message Flow; it can have zero (0) or more outgoing Message Flows."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The Cancel Intermediate Event can only be used when attached to the boundary of a Transaction Sub-Process. It cannot be used in any normal flow and cannot be attached to a non-Transaction Sub-Process."
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Cancel: This type of End is used within a Transaction Sub-Process."
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The list of BPMN elements that MAY be used in an Ad-Hoc Sub-Process: Data Object, Sequence Flow, Association, Data Association, Group, Message Flow (as a source or target), Gateway, and Intermediate Event."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The list of BPMN elements that MAY be used in an Ad-Hoc Sub-Process: Data Object, Sequence Flow, Association, Data Association, Group, Message Flow (as a source or target), Gateway, and Intermediate Event."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The list of BPMN elements that MAY be used in an Ad-Hoc Sub-Process: Data Object, Sequence Flow, Association, Data Association, Group, Message Flow (as a source or target), Gateway, and Intermediate Event."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The list of BPMN elements that MAY be used in an Ad-Hoc Sub-Process: Data Object, Sequence Flow, Association, Data Association, Group, Message Flow (as a source or target), Gateway, and Intermediate Event."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The list of BPMN elements that MAY be used in an Ad-Hoc Sub-Process: Data Object, Sequence Flow, Association, Data Association, Group, Message Flow (as a source or target), Gateway, and Intermediate Event."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The list of BPMN elements that MAY be used in an Ad-Hoc Sub-Process: Data Object, Sequence Flow, Association, Data Association, Group, Message Flow (as a source or target), Gateway, and Intermediate Event."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The list of BPMN elements that MUST be used in an Ad-Hoc Sub-Process: Activity."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The list of BPMN elements that MUST NOT be used in an Ad-Hoc Sub-Process: Start Event, End Event, Conversations (graphically), Conversation Links (graphically), and Choreography Activities."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The list of BPMN elements that MUST NOT be used in an Ad-Hoc Sub-Process: Start Event, End Event, Conversations (graphically), Conversation Links (graphically), and Choreography Activities."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The list of BPMN elements that MUST NOT be used in an Ad-Hoc Sub-Process: Start Event, End Event, Conversations (graphically), Conversation Links (graphically), and Choreography Activities."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The list of BPMN elements that MUST NOT be used in an Ad-Hoc Sub-Process: Start Event, End Event, Conversations (graphically), Conversation Links (graphically), and Choreography Activities."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The list of BPMN elements that MUST NOT be used in an Ad-Hoc Sub-Process: Start Event, End Event, Conversations (graphically), Conversation Links (graphically), and Choreography Activities."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Sub-Process is marked as being ad-hoc with a “tilde” symbol placed at the bottom center of the Sub-Process shape (see Figure 10.35 and Figure 10.36)."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """A flag that identifies whether this Sub-Process is an Event Sub-Process.
• If false, then this Sub-Process is a normal Sub-Process.
• If true, then this Sub-Process is an Event Sub-Process and is
subject to additional constraints (see page 176)."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "false"
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """When an Artifact is defined it is contained within a Collaboration
or a FlowElementsContainer (a Process or Choreography)."""
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "An Artifact MUST NOT be a target for a Message Flow."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "An Artifact MUST NOT be a source for a Message Flow."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "An Artifact MUST NOT be a target for a Sequence Flow."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "An Artifact MUST NOT be a source for a Sequence Flow."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Intermediate Event MUST be a source for a Sequence Flow.
* Multiple Sequence Flows MAY originate from an Intermediate Event. For each Sequence Flow that has the Intermediate Event as a source, a new parallel path SHALL be generated.
** An exception to this: an Intermediate Event with a Compensation trigger MUST NOT have an outgoing Sequence Flow (it MAY have an outgoing Association)."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectMinCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """For a Message Event that interrupts the Activity to which it is attached,
the boundary of the Event is solid (see upper figure on the right). Note
that if using this notation, the attribute cancelActivity of the Activity
to which the Event is attached is implicitly set to true.
For a Message Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false.

For a Timer Event that interrupts the Activity to which it is attached, the
boundary of the Event is solid (see upper figure on the right). Note that if using this notation, the attribute cancelActivity of the Activity to
which the Event is attached is implicitly set to true.
For a Timer Event that does not interrupt the Activity to which it is
attached, the boundary of the Event is dashed (see lower figure on the
right). Note that if using this notation, the attribute cancelActivity of
the Activity to which the Event is attached is implicitly set to false.

Annotation: Similarily described for other event triggers, except CompensationEvent:
cancelActivity: This attribute cannot be applied to ... Compensation Events (where it doesn’t apply).

Note that the interrupting a non-interrupting aspect of other Events does not apply in the case of a Compensation Event. Compensations can only be triggered after completion of the Activity to which they are
attached. Thus they cannot interrupt the Activity. The boundary of the
Event is always solid."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:DataHasValue ;
      owl:DataProperty "" ;
      owl:Literal "false"
    ], [
      a owl:DataHasValue ;
      owl:DataProperty "" ;
      owl:Literal "false"
    ], [
      a owl:DataHasValue ;
      owl:DataProperty "" ;
      owl:Literal "true"
    ], [
      a owl:DataHasValue ;
      owl:DataProperty "" ;
      owl:Literal "true"
    ] ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """An Intermediate Event with a Cancel trigger MAY be attached to a Sub-Process boundary only if the Transaction attribute of the Sub-Process is set to true.

The catch Cancel Intermediate Event MUST only be attached to the boundary of a Transaction Sub-Process and, thus, MAY NOT be used in normal flow."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectComplementOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ] ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "An exception to this: an Intermediate Event with a Compensation trigger MUST NOT have an outgoing Sequence Flow (it MAY have an outgoing Association)."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectMinCardinality [ a owl:ObjectProperty ], [ a owl:Class ] ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Message Intermediate Event MAY have an incoming Message Flow or an outgoing Message Flow, but not both."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Table 10.93 – Types of Events and their Markers

To be attached to the boundary of an Activity, an Intermediate Event MUST be one of the following triggers (EventDefinition): Message, Timer, Error, Escalation, Cancel, Compensation, Conditional, Signal, Multiple, and Parallel Multiple."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "BoundaryEvent: The Intermediate Event MUST NOT be a target for a Sequence Flow; it cannot have an incoming Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Message Intermediate Event MAY be the target for a Message Flow; it can have one incoming Message Flow."
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Message Intermediate Event MAY be a source for a Message Flow; it can have one outgoing Message Flow."
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The element to be called, which MAY be either a Collaboration or a
GlobalConversation. The called element MUST NOT be a
Choreography or a GlobalChoreographyTask (which are subtypes
of Collaboration).

Annotation: GlobalChoreographyTask need not be mentioned since it is a subclass of Choreography."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Note - The ConversationNode attribute messageFlowRef doesn't apply to Call Conversations."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Overview in Table 7.2, Type Dimension"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 11.7 - Use of Intermediate Events in Choreography"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 11.8 – Use of End Events in Choreography"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 11.7 - Use of Intermediate Events in Choreography"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 11.7 - Use of Intermediate Events in Choreography"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 11.6 – Use of Start Events in Choreography"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Start Event attributes isInterrupting:
This attribute only applies to Start Events of Event Sub-Processes; it is ignored for other Start Events."""
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:DataHasValue ;
      owl:DataProperty "" ;
      owl:Literal "true"
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 11.7 - Use of Intermediate Events in Choreography"
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "When Choreography Activities are defined they are contained within a Choreography or a Sub-Choreography."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Choreography looks similar to a private Business Process since it consists of a network of Activities, Events, and Gateways (see Figure 7.4).
Remark: Activities refer to ChoreographyActivities, not normal Activities."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 11.7 - Use of Intermediate Events in Choreography"
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 11.7 - Use of Intermediate Events in Choreography"
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Sequence Flows are used within Choreographies to show the sequence of the Choreography Activities"
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """When an Artifact is defined it is contained within a Collaboration
or a FlowElementsContainer (a Process or Choreography)."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Activities, Data Associations, and Data Objects MUST NOT be included as a flowElement for a Choreography."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Activities, Data Associations, and Data Objects MUST NOT be included as a flowElement for a Choreography."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Activities, Data Associations, and Data Objects MUST NOT be included as a flowElement for a Choreography."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Data Object References are a way to reuse Data Objects in the same diagram.
Activities, Data Associations, and Data Objects MUST NOT be included as a flowElement for a Choreography."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Swimlanes, both Pools and Lanes, are not used in Choreographies."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Collaboration has attribute choreographyRef but according to BPMN Spec.: Attribute is not applicable for Choreography or GlobalConversation which are a subtypes of Collaboration."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "LaneSets are not used for Choreographies or Sub-Choreographies."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "When Choreography Activities are defined they are contained within a Choreography or a Sub-Choreography, which are FlowElementContainers (other FlowElementContainers are not allowed to contain Choreography Activities)."
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """As with a standard Orchestration Task, the Choreography Task MAY have internal markers to show how the Choreography Task MAY be repeated. There are two types of internal markers (see Figure 11.12): 
A Choreography Task MAY have only one of the three markers at one time.
The marker for a Choreography Task that is a standard loop MUST be ..
The marker for a Choreography Task that is parallel multi-instance MUST be ..
The marker for a Choreography Task that is sequential multi-instance MUST be .."""
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """A Conversation Link MUST connect to exactly one ConversationNode. If the sourceRef is not a ConversationNode, then the targetRef MUST be a ConversationNode.

A Conversation Link MUST connect to exactly one ConversationNode. If the targetRef is not a ConversationNode, then the sourceRef MUST be a ConversationNode."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is no transformation defined or referenced, then only one source MUST be defined, and the contents of this source
will be copied into the target."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ] ;
    owl:ObjectMaxCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The DataAssociation class is a BaseElement contained by an Activity or Event, used to model how data is pushed into or pulled from item-aware elements."
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "If the Data Input is directly contained by the top-level Process, it MUST not be the target of Data Associations within the underlying model. Only Data Inputs that are contained by Activities or Events MAY be the target of Data Associations in the model."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectUnionOf [ a owl:Class ], [
      a owl:ObjectSomeValuesFrom ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ] ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Data Inputs MAY have incoming Data Associations."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The Data Object class is an item-aware element. Data Object elements MUST be contained within Process or Sub-Process elements."
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """A DataObject element that references an ItemDefinition marked as collection has to be visualized differently,
compared to single instance data structures. The notation looks as follows:
...
Collection (see Figure 10.53)
...
Figure 10.53 - A DataObject that is a collection"""
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The Data Object class is an item-aware element. Data Object elements MUST be contained within Process or Sub-Process elements. Data Object elements are visually displayed on a Process diagram. Data Object References are a way to reuse Data Objects in the same diagram."
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If the Data Output is directly contained by the top-level Process, it MUST not be the source of Data Associations within the underlying model. Only Data Outputs that are contained by Activities or Events
MAY be the target of Data Associations in the model."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectUnionOf [ a owl:Class ], [
      a owl:ObjectSomeValuesFrom ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ] ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Data Outputs MAY have outgoing DataAssociations."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The End Event ends the flow of the Process, and thus, will not have any outgoing Sequence Flows.

An End Event MUST NOT be a source for Sequence Flows; that is, there MUST NOT be outgoing Sequence Flows. 
•	An exception to this is when an End Event is used in an Expanded Sub-Process and is attached to the boundary of that Sub-Process. In this case, a Sequence Flow from the higher-level Process MAY connect from that End Event in lieu of connecting from the actual boundary of the Sub-Process."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectSomeValuesFrom ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:DataHasValue ;
      owl:DataProperty "" ;
      owl:Literal "true"
    ] ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The Cancel End Event MUST only be used within a Transaction Sub-Process and, thus, MAY NOT be used in any other type of Sub-Process or Process."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectComplementOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ] ;
    owl:ObjectAllValuesFrom [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The Result attribute of the End Event MUST be set to Multiple if there is more than one outgoing Message Flows."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ] ;
    owl:ObjectMaxCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The Result attribute of the End Event MUST be set to Message or Multiple if there are any outgoing Message Flows."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [
      a owl:ObjectUnionOf ;
      owl:Class ""
    ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """*An End Event MUST be a target for a Sequence Flow.
*An End Event MAY have multiple incoming Sequence Flows."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "There are nine types of End Events in BPMN: None, Message, Escalation, Error, Cancel, Compensation, Signal, Terminate, and Multiple."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "An End Event MUST NOT be the target of a Message Flow; it can have no incoming Message Flows."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Start Event MAY be the target for a Message Flow; it can have zero (0) or more incoming Message Flows."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "An End Event MAY be the source of a Message Flow; it can have zero (0) or more outgoing Message Flows."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """References the reusable EventDefinitions that are triggers
expected for a catch Event. Reusable EventDefinitions are
defined as top-level elements. These EventDefinitions can be
shared by different catch and throw Events.
• If there is no EventDefinition defined, then this is
considered a catch None Event and the Event will not have
an internal marker (see Figure 10.91).
• If there is more than one EventDefinition defined, this is
considered a Catch Multiple Event and the Event will have
the pentagon internal marker (see Figure 10.90).
This is an ordered set.
...
References the reusable EventDefinitions that are results
expected for a throw Event.

This definition was specified within the two subclasses CatchEvent and ThrowEvent and can, therefore, also be specified in the superclass. Furthermore, general specifications 0..n are always permitted."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Defines the event EventDefinitions that are triggers expected
for a catch Event. These EventDefinitions are only valid inside
the current Event.
• If there is no EventDefinition defined, then this is
considered a catch None Event and the Event will not have
an internal marker (see Figure 10.91).
• If there is more than one EventDefinition defined, this is
considered a catch Multiple Event and the Event will have
the pentagon internal marker (see Figure 10.90).
This is an ordered set.
...
Defines the event EventDefinitions that are results expected for
a throw Event.

This definition was specified within the two subclasses CatchEvent and ThrowEvent and can, therefore, also be specified in the superclass. Furthermore, general specifications 0..n are always permitted."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Note that there is a distinction between interrupting and non-interrupting Events and the handling of these Events"
  ], [ a owl:Class ], [
    a owl:DataExactCardinality ;
    owl:DataProperty "" ;
    owl:Datatype ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Table 11.7 - Use of Intermediate Events in Choreography

Message Intermediate Events MUST NOT be used in the Event-Based Gateway.
Timer Intermediate Events MAY be used, but they restrict the participation in the Gateway.
...
Signal Intermediate Events MAY be used (they are visible to all Participants)
No other types of Intermediate Events are allowed.

Remark: Table 11.7 also explicitly allows Conditional Events, however, they are not mentioned in section 11.6.2. Nevertheless, the author thinks, that Conditional Events should also be possible."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectComplementOf [
      a owl:ObjectSomeValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
    ] ;
    owl:ObjectSomeValuesFrom [ a owl:ObjectProperty ], [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If the Event Gateway’s instantiate attribute is set to true, then the marker for the Event Gateway looks like a Multiple Start Event ...
In order for an Event Gateway to instantiate a Process, it MUST not have any incoming Sequence Flows:"""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ] ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "If Message Intermediate Events are used in the configuration, then Receive Tasks MUST NOT be used in that configuration and vice versa."
  ], [ a owl:Class ], [
    a owl:ObjectComplementOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectSomeValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectSomeValuesFrom [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectSomeValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectSomeValuesFrom [ a owl:ObjectProperty ], [ a owl:Class ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Event-Based Gateways are configured by having outgoing Sequence Flows target an Intermediate Event or a Receive Task in any combination
...
Receive Tasks used in an Event Gateway configuration MUST NOT have any attached Intermediate
Events.
Only the following Intermediate Event triggers are valid: Message, Signal, Timer, Conditional, and Multiple"""
  ], [ a owl:Class ], [
    a owl:ObjectSomeValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectAllValuesFrom [ a owl:ObjectProperty ], [
      a owl:ObjectUnionOf ;
      owl:ObjectIntersectionOf [ a owl:Class ], [
        a owl:ObjectAllValuesFrom ;
        owl:ObjectProperty "" ;
        owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
      ], [ a owl:Class ], [
        a owl:ObjectExactCardinality ;
        owl:ObjectProperty "" ;
        owl:Class ""
      ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Target elements in an Event Gateway configuration MUST NOT have any additional incoming Sequence Flows (other than that from the Event Gateway)."
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectAllValuesFrom [ a owl:ObjectProperty ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "An Event Gateway MUST have two or more outgoing Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The outgoing Sequence Flows of the Event Gateway MUST NOT have a conditionExpression."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """If there is an End Event, then there MUST be at least one Start Event.
If there is a Start Event, then there MUST be at least one End Event.
Annotation: BPMN Specifcation only defines this explicitly for Process and SubProcesses but the author thinks that it also applies to Choreographies and SubChoreographies."""
  ], [ a owl:Class ], [
    a owl:ObjectIntersectionOf ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:ObjectSomeValuesFrom [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectSomeValuesFrom ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectComplementOf ;
      owl:ObjectSomeValuesFrom [ a owl:ObjectProperty ], [ a owl:Class ]
    ], [
      a owl:ObjectSomeValuesFrom ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Annotation: Restriction was defined in every Subclass, therefore moved to Superclass.
Process/SubProcess: There MAY be multiple End Events within a single level of a Process.
An End Event is OPTIONAL: a given Process level—a Process or an expanded Sub-Process—MAY (is NOT REQUIRED to) have this shape.
Choreography/SubChoreography: Table 11.8 – Use of End Events in Choreography"""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Annotation: Restriction was defined in every Subclass, therefore moved to Superclass.
Process/SubProcess: In BPMN a Process is depicted as a graph of Flow Elements, which are a set of Activities, Events, Gateways, and Sequence Flows that define finite execution semantics (see Figure 10.1).
Choreography/SubChoreography: The Choreography looks similar to a private Business Process since it consists of a network of Activities, Events, and Gateways (see Figure 7.4). Remark: Activities refer to ChoreographyActivities, not normal Activities."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Both Text Annotations and Groups can be used within Choreographies and all BPMN diagrams. There are no restrictions on their use."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Annotation: Restriction was defined in every Subclass, therefore moved to Superclass.
Process/SubProcess: A Start Event is OPTIONAL: a Process level—a top-level Process, a Sub-Process (embedded), or a Global Process (called Process)—MAY (is NOT REQUIRED to) have a Start Event.
Choreography/SubChoreography: Start Events provide the graphical marker for the start of a Choreography.
There MAY be multiple Start Events for a given Process level."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Both Text Annotations and Groups can be used within Choreographies and all BPMN diagrams. There are no restrictions on their use."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "In that case, the first matching Event will create a new instance of the Process, and waiting for the other Events originating from the same decision stops, following the usual semantics of the Event-Based Exclusive Gateway. Note that this is the only scenario where a Gateway can exist without an incoming Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:Class "" ;
    owl:ObjectMinCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Gateway MUST have either multiple incoming Sequence Flows or multiple outgoing Sequence Flows (i.e., it MUST merge or split the flow)."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectMinCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A GlobalChoreographyTask MUST NOT contain any Flow Elements."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Since a GlobalConversation does not have any Flow Elements, it does not require MessageFlowAssociations, ParticipantAssociations, or ConversationAssociations or Artifacts.
It is basically a set of Participants, Message Flows, and CorrelationKeys intended for reuse."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Since a GlobalConversation does not have any Flow Elements, it does not require MessageFlowAssociations, ParticipantAssociations, or ConversationAssociations or Artifacts.
It is basically a set of Participants, Message Flows, and CorrelationKeys intended for reuse."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Since a GlobalConversation does not have any Flow Elements, it does not require MessageFlowAssociations, ParticipantAssociations, or ConversationAssociations or Artifacts.
It is basically a set of Participants, Message Flows, and CorrelationKeys intended for reuse."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A GlobalConversation MUST NOT contain any ConversationNodes."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Since a GlobalConversation does not have any Flow Elements, it does not require MessageFlowAssociations, ParticipantAssociations, or ConversationAssociations or Artifacts."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Collaboration has attribute choreographyRef but according to BPMN Spec.: Attribute is not applicable for Choreography or GlobalConversation which are a subtypes of Collaboration.

Also, the Collaboration attribute choreographyRef is not applicable to GlobalConversation."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """A Link Intermediate Event MUST NOT be both a target and a source of a Sequence Flow.

A Link Intermediate Event MAY be the target (target Link) or a source (source Link) of a Sequence Flow, but MUST NOT be both a target and a source.

BPMN provides Intermediate Events of type Link for use as Off-Page connectors (see Figure 10.84--Note that the figure shows two different printed pages, not two Pools in one diagram). A pair of Link Events is used. One of the pair is shown at the end of one page. This Event is named and has an incoming Sequence Flow and no outgoing Sequence Flows. The second Link Event is at the beginning of the next page, shares the same name, and has an outgoing Sequence Flow and no incoming Sequence Flow."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectComplementOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ] ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Intermediate Events in Normal Flow: Intermediate Events MUST be a target of a Sequence Flow. 
Note – this is a change from BPMN 1.2 semantics, which allowed some Intermediate Events to not have an incoming Sequence Flow.
An Intermediate Event MAY have multiple incoming Sequence Flows.
A Link Intermediate Event MAY be the target (target Link) or a source (source Link) of a Sequence Flow, but MUST NOT be both a target and a source."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectMinCardinality [ a owl:ObjectProperty ], [ a owl:Class ] ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Intermediate Events in Normal Flow: Intermediate Events MUST be a target of a Sequence Flow. 
Note – this is a change from BPMN 1.2 semantics, which allowed some Intermediate Events to not have an incoming Sequence Flow.
An Intermediate Event MAY have multiple incoming Sequence Flows.
A Link Intermediate Event MAY be the target (target Link) or a source (source Link) of a Sequence Flow, but MUST NOT be both a target and a source."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectMinCardinality [ a owl:ObjectProperty ], [ a owl:Class ] ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Message Intermediate Event MAY have an incoming Message Flow or an outgoing Message Flow, but not both."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Message Intermediate Event MAY be the target for a Message Flow; it can have one incoming Message Flow."
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Table 10.89 – Intermediate Event Types in Normal Flow

Table 10.93 – Types of Events and their Markers"""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """A Link Intermediate Event MUST NOT be both a target and a source of a Sequence Flow.

A Link Intermediate Event MAY be the target (target Link) or a source (source Link) of a Sequence Flow, but MUST NOT be both a target and a source.

BPMN provides Intermediate Events of type Link for use as Off-Page connectors (see Figure 10.84--Note that the figure shows two different printed pages, not two Pools in one diagram). A pair of Link Events is used. One of the pair is shown at the end of one page. This Event is named and has an incoming Sequence Flow and no outgoing Sequence Flows. The second Link Event is at the beginning of the next page, shares the same name, and has an outgoing Sequence Flow and no incoming Sequence Flow."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectComplementOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ] ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Intermediate Events in Normal Flow: Intermediate Events MUST be a target of a Sequence Flow. 
Note – this is a change from BPMN 1.2 semantics, which allowed some Intermediate Events to not have an incoming Sequence Flow.
An Intermediate Event MAY have multiple incoming Sequence Flows.
A Link Intermediate Event MAY be the target (target Link) or a source (source Link) of a Sequence Flow, but MUST NOT be both a target and a source."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectMinCardinality [ a owl:ObjectProperty ], [ a owl:Class ] ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Intermediate Events in Normal Flow: Intermediate Events MUST be a target of a Sequence Flow. 
Note – this is a change from BPMN 1.2 semantics, which allowed some Intermediate Events to not have an incoming Sequence Flow.
An Intermediate Event MAY have multiple incoming Sequence Flows.
A Link Intermediate Event MAY be the target (target Link) or a source (source Link) of a Sequence Flow, but MUST NOT be both a target and a source."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectMinCardinality [ a owl:ObjectProperty ], [ a owl:Class ] ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Message Intermediate Event MAY have an incoming Message Flow or an outgoing Message Flow, but not both."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Message Intermediate Event MAY be a source for a Message Flow; it can have one outgoing Message Flow."
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "When a Message Flow is defined it is contained either within a Collaboration, a Choreography, or a GlobalChoreographyTask."
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Of the types of InteractionNode, only Pools/Participants, Activities, and
Events can be the source of a Message Flow."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Of the types of InteractionNode, only Pools/Participants, Activities, and
Events can be the target of a Message Flow."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The attribute behavior acts as a shortcut for specifying when events
SHALL be thrown from an Activity instance that is about to complete. It
can assume values of None, One, All, and Complex, resulting in the
following behavior:
• None: the EventDefinition which is associated through the
noneEvent association will be thrown for each instance
completing;
• One: the EventDefinition referenced through the oneEvent
association will be thrown upon the first instance completing;
• All: no Event is ever thrown; a token is produced after completion
of all instances
• Complex: the complexBehaviorDefinitions are consulted to
determine if and which Events to throw.
...
complexBehaviorDefinition: ComplexBehaviorDefinition [0..*]: Controls when and which Events are thrown in case behavior is set to complex.
oneBehaviorEventRef: EventDefinition [0..1]: 
The EventDefinition which is thrown when behavior is set to one
and the first internal Activity instance has completed.
noneBehaviorEventRef: EventDefinition [0..1]:
The EventDefinition which is thrown when the behavior is set to
none and an internal Activity instance has completed."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectMinCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ] ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """In order to initialize a valid multi-instance, either the loopCardinality
Expression or the loopDataInput MUST be specified."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """numberOfActiveInstances: ... In case of a sequential
Multi-Instance Activity, this value can’t be greater than 1."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ] ;
    owl:DataExactCardinality [ a owl:DataProperty ], [
      a owl:DatatypeRestriction ;
      owl:Datatype "" ;
      owl:FacetRestriction [ a owl:Literal ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Table 10.88
Except Cancel: This type of End is used within a Transaction Sub-Process."""
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Table 10.84 – Top-Level Process Start Event Types
There are seven (7) types of Start Events for top-level Processes in BPMN (see Table 10.84): None, Message, Timer, Conditional, Signal, Multiple, and Parallel."""
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Start Event attributes isInterrupting:
This attribute only applies to Start Events of Event Sub-Processes; it is ignored for other Start Events."""
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:DataHasValue ;
      owl:DataProperty "" ;
      owl:Literal "true"
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Data Object elements MUST be contained within Process or Sub- Process elements."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Data Object References are a way to reuse Data Objects in the same diagram."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "In BPMN a Process is depicted as a graph of Flow Elements, which are a set of Activities, Events, Gateways, and Sequence Flows that define finite execution semantics (see Figure 10.1)."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "In BPMN a Process is depicted as a graph of Flow Elements, which are a set of Activities, Events, Gateways, and Sequence Flows that define finite execution semantics (see Figure 10.1)."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """A Process describes a sequence or flow of Activities in an organization with the objective of carrying out work. In BPMN a Process is depicted as a graph of Flow Elements, which are a set of Activities, Events, Gateways, and Sequence Flows that define finite execution semantics (see Figure 10.1).

Remark: It is discussible whether a process can also have 0 Activities (only Gateways and Events)? The author thinks, that this should not be the case."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "In this capacity, a Process MAY reference a set of Interfaces that define its external behavior."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Choreography Activities MUST NOT be included as a flowElement for a Process."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Property elements MUST be contained within a FlowElement.
...
Certain flow elements MAY contain properties, in particular only Processes, Activities and Events MAY contain Properties."""
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "In order for the Receive Task to instantiate the Process its instantiate attribute MUST be set to true and it MUST NOT have any incoming Sequence Flow."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ] ;
    owl:DataHasValue [ a owl:DataProperty ], [ a owl:Literal ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """scriptFormat: ...
And it MUST be specified if a script is provided."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:DataExactCardinality [ a owl:DataProperty ], [ a owl:Datatype ], [ a owl:DataProperty ], [ a owl:Datatype ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "For Processes, they can only connect Events, Gateways, and Activities."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
    ], [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
    ] ;
    owl:ObjectComplementOf [
      a owl:ObjectSomeValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "For Choreographies, they can only connect Events, Gateways, and Choreography Activities"
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
    ], [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
    ] ;
    owl:ObjectComplementOf [
      a owl:ObjectSomeValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Multiple Sequence Flows MAY originate from a Start Event. For each Sequence Flow that has the Start Event as a source, a new parallel path SHALL be generated.
* The conditionExpression attribute for all outgoing Sequence Flows MUST be set to None."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectComplementOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ] ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The FlowNode that the Sequence Flow is connecting from.
For a Process: Of the types of FlowNode, only Activities, Gateways, and Events can be the source. However, Activities that are Event Sub-Processes are not allowed to be a source.
For a Choreography: Of the types of FlowNode, only Choreography Activities, Gateways, and Events can be the source."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The FlowNode that the Sequence Flow is connecting to.
For a Process: Of the types of FlowNode, only Activities, Gateways, and Events can be the target. However, Activities that are Event Sub-Processes are not allowed to be a target.
For a Choreography: Of the types of FlowNode, only Choreography Activities, Gateways, and Events can be the target."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """In terms of Sequence Flows, the Start Event starts the flow of the Process, and thus, will not have any incoming Sequence Flows—no Sequence Flow can connect to a Start Event.

A Start Event MUST NOT be a target for Sequence Flows; it MUST NOT have incoming Sequence Flows.
* An exception to this is when a Start Event is used in an Expanded Sub-Process and is attached to the boundary of that Sub-Process. In this case, a Sequence Flow from the higher-level Process MAY connect to that Start Event in lieu of connecting to the actual boundary of the Sub-Process."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectIntersectionOf [
      a owl:ObjectSomeValuesFrom ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:DataHasValue ;
      owl:DataProperty "" ;
      owl:Literal "true"
    ] ;
    owl:ObjectExactCardinality [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The None Start Event MAY NOT be used for an Event Sub-Process."
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectComplementOf [
      a owl:ObjectSomeValuesFrom ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Compensation Start Event MAY NOT be used for a top-level Process.
The Compensation Start Event MAY be used for an Event Sub-Process."""
  ], [ a owl:Class ], [
    a owl:ObjectUnionOf ;
    owl:ObjectComplementOf [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ] ;
    owl:ObjectAllValuesFrom [ a owl:ObjectProperty ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Start Events can be used for three types of Processes:
• Top-level Processes
• Sub-Processes (embedded)
• Global Process (called)
• Event Sub-Processes
...
Start Events provide the graphical marker for the start of a Choreography. They are used much in the same way as
they are used for a Process (see “Start Event” on page 238)."""
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """* A Start Event MUST be a source for a Sequence Flow.
* Multiple Sequence Flows MAY originate from a Start Event. For each Sequence Flow that has the Start Event as a source, a new parallel path SHALL be generated."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Start Event MUST NOT be a source for a Message Flow; it MUST NOT have outgoing Message Flows."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Start Event MUST NOT be a target for Sequence Flows; it MUST NOT have incoming Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Message: Attached to Activity boundary 
Yes. Only for Choreography Tasks."""
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectExactCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Start Event attributes isInterrupting:
This attribute only applies to Start Events of Event Sub-Processes; it is ignored for other Start Events."""
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:DataHasValue ;
      owl:DataProperty "" ;
      owl:Literal "true"
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """In the collapsed form, the Sub-Process object uses a marker to distinguish it as a Sub-Choreography, rather than a Choreography Task.

As with a standard Orchestration Sub-Process, the Sub-Choreography MAY have internal markers to show how the
Sub-Choreography MAY be repeated. There are two types of internal markers (see Figure 11.22):
A Sub-Choreography MAY have only one of the three markers at one time.
* The marker for a Sub-Choreography that is a standard loop MUST be..
* The marker for a Sub-Choreography that is parallel multi-instance MUST be..
* The marker for a Sub-Choreography that is sequential multi-instance MUST be a.."""
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "When Choreography Activities are defined they are contained within a Choreography or a Sub-Choreography."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Choreography looks similar to a private Business Process since it consists of a network of Activities, Events, and Gateways (see Figure 7.4).
Remark: Activities refer to ChoreographyActivities, not normal Activities."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Sequence Flows are used within Choreographies to show the sequence of the Choreography Activities"
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Activities, Data Associations, and Data Objects MUST NOT be included as a flowElement for a Choreography."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Activities, Data Associations, and Data Objects MUST NOT be included as a flowElement for a Choreography."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Activities, Data Associations, and Data Objects MUST NOT be included as a flowElement for a Choreography.
Data Object elements MUST be contained within Process or Sub- Process elements."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Data Object References are a way to reuse Data Objects in the same diagram.
Activities, Data Associations, and Data Objects MUST NOT be included as a flowElement for a Choreography."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Swimlanes, both Pools and Lanes, are not used in Choreographies."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "LaneSets are not used for Choreographies or Sub-Choreographies."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "In the collapsed form, the Sub-Process object uses a marker to distinguish it as a Sub-Choreography, rather than a Choreography Task."
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """As with a standard Orchestration Sub-Process, the Sub-Choreography MAY have internal markers to show how the Sub-Choreography MAY be repeated. There are two types of internal markers (see Figure 11.22): Sub-Choreography MAY have only one of the three markers at one time. 
The marker for a Sub-Choreography that is a standard loop MUST be ..
The marker for a Sub-Choreography that is parallel multi-instance MUST be ..
The marker for a Sub-Choreography that is sequential multi-instance MUST be .."""
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """The Sub- Conversation marker MUST be a small square with a plus sign (+) inside. The square MUST be positioned at the bottom center of the shape.

A Sub-Conversation is a graphical object within a Collaboration, but it also can be “opened up” to show the lowerlevel details of the Conversation, which consist of Message Flows, Conversations, and/or other Sub-Conversations."""
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93"
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """A Sub-Process is an Activity whose internal details have been modeled using Activities, Gateways, Events, and Sequence Flows.

A Sub-Process is a compound Activity that is included within a Process (see page 173) or Choreography (see page 328). It is compound in that it can be broken down into a finer level of detail (a Process or Choreography) through a set of sub-Activities."""
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "(One or more) Intermediate Events MAY be attached directly to the boundary of an Activity."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Data Object elements MUST be contained within Process or Sub- Process elements."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Data Object References are a way to reuse Data Objects in the same diagram."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Sub-Process is an Activity whose internal details have been modeled using Activities, Gateways, Events, and Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A Sub-Process is an Activity whose internal details have been modeled using Activities, Gateways, Events, and Sequence Flows."
  ], [ a owl:Class ], [
    a owl:ObjectMinCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """When Choreography Activities are defined they are contained within a Choreography or a Sub-Choreography.
Choreography Activities MUST NOT be included as a flowElement for a Process."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Embedded Sub-Processes MUST NOT define Data Inputs and Data Outputs directly, however they MAY define them indirectly via
MultiInstanceLoopCharacteristics."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Embedded Sub-Processes MUST NOT define Data Inputs and Data Outputs directly, however they MAY define them indirectly via
MultiInstanceLoopCharacteristics."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "A collapsed Sub-Process MAY have one to three of these other markers, in all combinations except that loop and multi-instance cannot be shown at the same time (see Figure 10.28)."
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:ObjectIntersectionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "BPMN specifies five (5) types of standard markers for Sub-Processes. The (Collapsed) Sub-Process marker, seen in Figure 10.24, can be combined with four (4) other markers: a loop marker or a multi-instance marker, a Compensation marker, and an Ad-Hoc marker."
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "BPMN specifies five (5) types of standard markers for Sub-Processes. The (Collapsed) Sub-Process marker, seen in Figure 10.24, can be combined with four (4) other markers: a loop marker or a multi-instance marker, a Compensation marker, and an Ad-Hoc marker."
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "BPMN specifies five (5) types of standard markers for Sub-Processes. The (Collapsed) Sub-Process marker, seen in Figure 10.24, can be combined with four (4) other markers: a loop marker or a multi-instance marker, a Compensation marker, and an Ad-Hoc marker."
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "BPMN specifies five (5) types of standard markers for Sub-Processes. The (Collapsed) Sub-Process marker, seen in Figure 10.24, can be combined with four (4) other markers: a loop marker or a multi-instance marker, a Compensation marker, and an Ad-Hoc marker."
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "BPMN specifies five (5) types of standard markers for Sub-Processes. The (Collapsed) Sub-Process marker, seen in Figure 10.24, can be combined with four (4) other markers: a loop marker or a multi-instance marker, a Compensation marker, and an Ad-Hoc marker."
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """BPMN specifies three types of markers for Task: a Loop marker or a Multi-Instance marker and a Compensation marker. A Task MAY have one or two of these markers (see Figure 10.9).
 The loop Marker MAY be used in combination with the compensation marker. 
The multi-instance marker MAY be used in combination with the compensation marker. 
The Compensation Marker MAY be used in combination with the loop marker or the multi-instance marker."""
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:ObjectIntersectionOf [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "BPMN specifies three types of markers for Task: a Loop marker or a Multi-Instance marker and a Compensation marker."
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "BPMN specifies three types of markers for Task: a Loop marker or a Multi-Instance marker and a Compensation marker."
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "BPMN specifies three types of markers for Task: a Loop marker or a Multi-Instance marker and a Compensation marker."
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Overview in Table 7.2, Type Dimension"
  ], [ a owl:Class ], [
    a owl:ObjectExactCardinality ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Table 10.93 – Types of Events and their Markers"
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "true"
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "The Cancel Intermediate Event can only be used when attached to the boundary of a Transaction Sub-Process. It cannot be used in any normal flow and cannot be attached to a non-Transaction Sub-Process."
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectMinCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "Cancel This type of End is used within a Transaction Sub-Process."
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectMinCardinality ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal "There is only one type of Start Event for Sub-Processes in BPMN (see Figure 10.82): None."
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:ObjectAllValuesFrom ;
      owl:ObjectProperty "" ;
      owl:Class ""
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """Start Event attributes isInterrupting:
This attribute only applies to Start Events of Event Sub-Processes; it is ignored for other Start Events."""
  ], [ a owl:Class ], [
    a owl:ObjectAllValuesFrom ;
    owl:ObjectProperty "" ;
    owl:ObjectUnionOf [
      a owl:ObjectComplementOf ;
      owl:Class ""
    ], [
      a owl:DataHasValue ;
      owl:DataProperty "" ;
      owl:Literal "true"
    ]
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """There are three basic outcomes of a Transaction:
1. Successful completion: ...
2. Failed completion (Cancel): ...
3. Hazard: ..."""
  ], [ a owl:Class ], [
    a owl:ObjectMaxCardinality ;
    owl:ObjectProperty "" ;
    owl:Class ""
  ], [
    a owl:Annotation ;
    owl:AnnotationProperty "" ;
    owl:Literal """A flag that identifies whether this Sub-Process is an Event Sub-Process.
• If false, then this Sub-Process is a normal Sub-Process.
• If true, then this Sub-Process is an Event Sub-Process and is
subject to additional constraints (see page 176)."""
  ], [ a owl:Class ], [
    a owl:DataHasValue ;
    owl:DataProperty "" ;
    owl:Literal "false"
  ] ;
  owl:DisjointClasses [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ], [ a owl:Class ] ;
  owl:SubObjectPropertyOf [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ], [ a owl:ObjectProperty ] ;
  owl:InverseObjectProperties [ a owl:ObjectProperty ], [ a owl:ObjectProperty ] ;
  owl:FunctionalObjectProperty [ a owl:ObjectProperty ], [ a owl:ObjectProperty ] ;
  owl:ObjectPropertyDomain [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [
    a owl:ObjectUnionOf ;
    owl:Class ""
  ] ;
  owl:ObjectPropertyRange [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [ a owl:Class ], [ a owl:ObjectProperty ], [
    a owl:ObjectUnionOf ;
    owl:Class ""
  ] ;
  owl:SubDataPropertyOf [ a owl:DataProperty ], [ a owl:DataProperty ] ;
  owl:FunctionalDataProperty [ a owl:DataProperty ] ;
  owl:DataPropertyDomain [ a owl:DataProperty ], [
    a owl:ObjectUnionOf ;
    owl:Class ""
  ] ;
  owl:AnnotationAssertion [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:IRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:AbbreviatedIRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:AbbreviatedIRI ], [ a owl:Literal ], [ a owl:AnnotationProperty ], [ a owl:AbbreviatedIRI ], [ a owl:Literal ] .

